import{d as y,V as A,u as b,W as w,I as g,j as h,k,c as v,o as C,l as a,m as u,p as e,y as U,U as V,G as r,B,K as d,Y as E}from"./index-C4Nn75mD.js";import{_ as I}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-QYU0kAho.js";import{u as N}from"./usePageTitle-DfHnpKdZ.js";import{u as P}from"./usePrefectApi-CcIJ_Npf.js";import"./mapper-ZdiQWYLI.js";import"./api-Cmsx--kj.js";const G=y({__name:"AutomationEdit",async setup(T){let o,m;const i=P(),c=A(),_=b(),p=w("automationId"),s=([o,m]=g(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);N(`Edit Automation: ${s.name}`);const f=h(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function x(l){try{await i.automations.updateAutomation(p.value,l),d(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=E(t,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=k("p-layout-default");return C(),v(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(U),{crumbs:f.value},{actions:a(()=>[u(e(V),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[B(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(I,{automation:e(s),editing:"",onSubmit:x},null,8,["automation"])]),_:1})}}});export{G as default};
//# sourceMappingURL=AutomationEdit-B8T5YwpG.js.map
