# Speed Layer Local Development Environment
version: '3.8'

services:
  # PostgreSQL/TimescaleDB for Aurora simulation
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: speedlayer-timescaledb
    environment:
      POSTGRES_DB: condvest_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ../shared/database/schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - speedlayer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 3

  # LocalStack for AWS service simulation
  localstack:
    image: localstack/localstack:latest
    container_name: speedlayer-localstack
    environment:
      SERVICES: kinesis,cloudwatch
      DEBUG: 1
      DATA_DIR: /tmp/localstack/data
      DOCKER_HOST: unix:///var/run/docker.sock
    ports:
      - "4566:4566"
      - "4571:4571"
    volumes:
      - localstack_data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - speedlayer-network

  # Speed Layer WebSocket Service
  websocket-service:
    build:
      context: ..
      dockerfile: speed_layer/Dockerfile
    container_name: speedlayer-websocket
    environment:
      # Required environment variables
      POLYGON_API_KEY: ${POLYGON_API_KEY:-demo_key}
      KINESIS_STREAM_NAME: market-data-stream
      AURORA_ENDPOINT: timescaledb:5432
      AWS_REGION: us-east-1
      
      # Database connection for local testing
      DB_HOST: timescaledb
      DB_PORT: 5432
      DB_NAME: condvest_dev
      DB_USER: postgres
      DB_PASSWORD: postgres
      
      # AWS LocalStack endpoints
      AWS_ENDPOINT_URL: http://localstack:4566
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      
      # Logging
      LOG_LEVEL: INFO
      
    ports:
      - "8080:8080"  # Health check endpoint
    depends_on:
      timescaledb:
        condition: service_healthy
      localstack:
        condition: service_started
    networks:
      - speedlayer-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  timescale_data:
  localstack_data:

networks:
  speedlayer-network:
    driver: bridge
