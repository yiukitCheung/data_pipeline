# Serving Layer Local Development Environment
# Purpose: Test API Gateway + Lambda functions locally

version: '3.8'

services:
  # FastAPI server simulating API Gateway
  api-server:
    build:
      context: ..
      dockerfile: local_dev/Dockerfile.api
    container_name: serving-api-server
    environment:
      # Database connection
      DATABASE_URL: "postgresql://condvest_user:condvest_pass@timescaledb:5432/condvest"
      # API Configuration
      API_HOST: "0.0.0.0"
      API_PORT: "8000"
      LOG_LEVEL: "INFO"
      ENVIRONMENT: "local"
      # CORS Configuration
      CORS_ORIGINS: "http://localhost:3000,http://localhost:8080"
    ports:
      - "8000:8000"  # API server
    depends_on:
      timescaledb:
        condition: service_healthy
    networks:
      - serving-network
    volumes:
      - ../shared:/app/shared:ro
      - ../lambda_functions:/app/lambda_functions:ro
      - ./api_server.py:/app/api_server.py:ro

  # TimescaleDB for data access
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: serving-timescaledb
    environment:
      POSTGRES_DB: condvest
      POSTGRES_USER: condvest_user
      POSTGRES_PASSWORD: condvest_pass
      TIMESCALEDB_TELEMETRY: 'off'
    ports:
      - "5435:5432"  # Different port from batch layer
    volumes:
      - serving_timescale_data:/var/lib/postgresql/data
      - ./init_sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U condvest_user -d condvest"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - serving-network

volumes:
  serving_timescale_data:
    name: serving-timescale-data

networks:
  serving-network:
    name: serving-network
    driver: bridge
